{% extends "../partials/layout.njk" %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "hmpps/components/date-picker/macro.njk" import hmppsDatePicker %}
{% from "../partials/summary-card.njk" import summaryCard %}

{% set pageTitle = applicationName + " - Create a goal with "+ data.popData.givenName %}

{% set mainClasses = "app-container govuk-body" %}

{# Setup arrays and custom HTML #}

{% set areasOfNeedHtml %}
    {{ govukCheckboxes({
      name: "otherAreaOfNeed",
      hint: {
        text: "Select all that apply."
      },
      items: data.otherAreaOfNeed
    }) }}
{% endset -%}

{% set customGoalHtml %}
{{ govukInput({
            id: "goal-selection-custom",
            name: "goal-selection-custom",
            label: {
                text: locale.goalSelection.customOptionLabel
            },
            errorMessage: getFormattedError(errors, locale, "goal-selection-custom"),
            value: data.form['goal-selection-custom']
        }) }}
{% endset -%}

{% set customDateHtml %}
    {{ hmppsDatePicker({
        id: "datePicker",
        name: "datePicker",
        classes: "govuk-input--width-10",
        hint: { text: "For example, 31/3/2023." },
        label: { text: "Select a date", classes: "govuk-fieldset__legend--s" }
    }) }}
{% endset -%}

{% set goals = [] %}

{% for goal in data.referenceData.goals %}
    {% set goals = (goals.push({
            id: "goal-selection-radio-" + goal.id,
            value: goal,
            text: goal
        }), goals) %}
{% endfor %}
{% set goals = (goals.push({divider: "or"}), goals) %}
{% set goals = (goals.push({
    value: "custom",
    text: locale.goalSelection.customRadioOptionText,
    conditional: {
        html: customGoalHtml
    }
  }), goals)
%}

{% block content %}
    <div class="govuk-width-container">
        <a href="#" class="govuk-back-link">Back</a>
        <main class="govuk-main-wrapper">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">

                    <span class="govuk-caption-xl">{{ data.referenceData.name }}</span>
                    <h1 class="govuk-heading-xl">{{ locale.title | replace("{POP_NAME}", data.popData.firstName) }}</h1>

                    <form id="create-goal-form" method="POST">
                        <input type="hidden" name="_csrf" value="{{ csrfToken }}">
                        <input type="hidden" name="area-of-need" value="{{ data.referenceData.name }}">
                        <div class="govuk-form-group">
                            <h1 class="govuk-label-wrapper">
                                <label class='govuk-label--l' for="step-name">What goal should {{ data.popData.firstName }} try to achieve?</label>
                            </h1>
                            <div id="stepName-hint" class="govuk-hint">
                                Search for a suggested goal or enter your own. Add one goal at a time.
                            </div>
                            <input class="govuk-input" id="step-name" name="stepName" type="text">
                            <div id="my-autocomplete-container"></div>

                        </div>

                        {{ govukRadios({
                            name: "other-area-of-need-radio",
                            fieldset: {
                                legend: {
                                    text: "Is this goal related to any other area of need?",
                                    isPageHeading: false,
                                    classes: "govuk-fieldset__legend--l"
                                }
                            },
                            errorMessage: getFormattedError(errors, locale, 'other-area-of-need-radio'),
                            items: [
                                {
                                  value: "yes",
                                  text: "Yes",
                                  conditional: {
                                      html: areasOfNeedHtml
                                  }
                                },
                                {
                                  value: "no",
                                  text: "No"
                                }
                              ]
                        }) }}

                        {{ govukRadios({
                            name: "start-working-goal-radio",
                            fieldset: {
                                legend: {
                                    text: locale.startWorking.label | replace("{POP_NAME}", data.popData.firstName),
                                    isPageHeading: false,
                                    classes: "govuk-fieldset__legend--l"
                                }
                            },
                            errorMessage: getFormattedError(errors, locale, 'start-working-goal-radio'),
                            items: [
                                {
                                  value: "yes",
                                  text: "Yes",
                                  conditional: {
                                      html: areasOfNeedHtml
                                  }
                                },
                                {
                                  value: "no",
                                  text: "No"
                                }
                              ]
                        }) }}

                        {{ govukRadios({
                            name: "date-selection-radio",
                            fieldset: {
                                legend: {
                                    text: locale.dateSelection.label | replace("{POP_NAME}", data.popData.firstName),
                                    isPageHeading: false,
                                    classes: "govuk-fieldset__legend--l"
                                }
                            },
                            hint: {
                                text: locale.dateSelection.hint
                            },
                            errorMessage: getFormattedError(errors, locale, 'date-selection-radio'),
                            value: data.form['date-selection-radio'],
                            items: [
                                {
                                    value: data.dateOptionsDate[0] | formatISODate,
                                    text: locale.dateSelection.options.threeMonths | replace("{3_MONTHS_DATE}", (data.dateOptionsDate[0] | formatMonthYear))
                                },
                                {
                                    value: data.dateOptionsDate[1] | formatISODate,
                                    text: locale.dateSelection.options.sixMonths | replace("{6_MONTHS_DATE}", (data.dateOptionsDate[1] | formatMonthYear))
                                },
                                {
                                    value: data.dateOptionsDate[2] | formatISODate,
                                    text: locale.dateSelection.options.twelveMonths | replace("{12_MONTHS_DATE}", (data.dateOptionsDate[2] | formatMonthYear))
                                },
                                {
                                    divider: "or"
                                },
                                {
                                    value: "custom",
                                    text: locale.dateSelection.customRadioOptionText,
                                    conditional: {
                                        html: customDateHtml
                                    }
                                }
                            ]
                        }) }}

                        <div class="govuk-button-group">
                            {{ govukButton({
                                text: locale.saveButtonText,
                                name: "action",
                                value: "continue"
                            }) }}
                        </div>
                    </form>
                </div>
                <div class="govuk-grid-column-one-third">
                    {% call summaryCard({
                        title: {
                            text: locale.motivationsToChangeWidget.title
                        }
                    }) %}
                    {# TODO: Placeholder until pulled from API #}
                    <p>{{ data.popData.firstName}}
                        <b>{{ locale.motivationsToChangeWidget.motivationLevel }}</b>
                    </p>
                    <span class="govuk-secondary-text">{{ locale.motivationsToChangeWidget.lastUpdated | replace("{MOTIVATION_UPDATE_DATE}", "25th December 2023") }}</span>
                    {% endcall %}
                </div>
            </div>
        </main>
    </div>
{% endblock %}