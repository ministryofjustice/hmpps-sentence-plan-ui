name: Build and test PR

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  helm_lint:
    name: Helm lint
    strategy:
      matrix:
        environments: [ 'dev', 'test', 'preprod', 'prod' ]
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/test_helm_lint.yml@v2
    secrets: inherit
    with:
      environment: ${{ matrix.environments }}

  node_build:
    name: Build
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/node_build.yml@v2
    secrets: inherit

  node_unit_tests:
    name: Unit tests
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/node_unit_tests.yml@v2
    needs: [node_build]
    secrets: inherit

  build_docker:
    name: Build docker image
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/docker_build.yml@v2
    with:
      docker_registry: 'ghcr.io'
      registry_org: 'ministryofjustice'
      tag_latest: false
      push: false
      load: true
      docker_multiplatform: false
      upload_image_artifact: true
      image_artifact_retention_days: 2

  visual_regression_test:
    needs: build_docker
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4 ]
    uses: ./.github/workflows/visual_regression_test.yml
    with:
      app_version: ${{ needs.build_docker.outputs.app_version }}
      job-index: ${{ strategy.job-index }}
      job-total: ${{ strategy.job-total }}
      matrix-container: ${{ matrix.containers }}

  e2e_test:
    needs: [build_docker]
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4, 5 ]
    uses: ./.github/workflows/e2e_test.yml
    with:
      app_version: ${{ needs.build_docker.outputs.app_version }}
      job-index: ${{ strategy.job-index }}
      job-total: ${{ strategy.job-total }}
      matrix-container: ${{ matrix.containers }}

  publish-test-results:
    name: "Publish Tests Results"
    needs: [ e2e_test, node_unit_tests ]
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()

    steps:
      - name: Download Unit Test Artifacts
        uses: actions/download-artifact@v5
        with:
          path: unit_test_artifacts
          pattern: npm_unit_test_artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
        with:
          files: "unit_test_artifacts/**/*.xml"
          check_name: "Unit Test Results"

      - name: Download E2E Test Artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts
          pattern: test_results_*

      - name: Publish E2E Test Results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
        with:
          files: "artifacts/**/*.xml"
          check_name: "Cypress Test Results"
