name: Run end-to-end tests

on:
  workflow_call:
    inputs:
      app_version:
        description: App version
        required: true
        type: string
      job-index:
        description: 'The index of the current job'
        required: false
        type: number
        default: 1
      job-total:
        description: 'The total number of jobs to run'
        required: false
        type: number
        default: 1

permissions:
  contents: read

jobs:
  e2e_test:
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ inputs.app_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Download docker image
        uses: actions/download-artifact@v4
        with:
          name: build_image
          path: ${{ runner.temp }}

      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/build_image.tar

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Run npm ci
        run: npm ci

      - name: Stand up a test environment
        run: |
          make test-up

      - name: Run split Cypress tests
        run: |
          make e2e-ci
        env:
          SPLIT: ${{ inputs.job-total }}
          SPLIT_INDEX: ${{ inputs.job-index }}

      - name: Upload test results
        if: '!cancelled()'
        uses: actions/upload-artifact@v4
        with:
          name: test_results_${{ env.SPLIT_INDEX }}
          path: |
            test_results/cypress/

      - name: Archive screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots_${{ env.SPLIT_INDEX }}
          path: |
            ./integration_tests/screenshots/**/*

      - name: Export container logs
        if: failure()
        run: make save-logs PROJECT_NAME="hmpps-sentence-plan-test" OUTPUT_LOGS_DIR=${{ runner.temp }}/docker-logs

      - name: Upload docker logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docker_logs_${{ env.SPLIT_INDEX }}
          path: |
            ${{ runner.temp }}/docker-logs
