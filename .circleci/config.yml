version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8
  slack: circleci/slack@4.12.5
  mem: circleci/rememborb@0.0.2

parameters:
  alerts-slack-channel:
    type: string
    # Normally team specific alert channel e.g. hmpps_tech_alerts, syscon-alerts, dps_sed_alerts
    # This is to avoid a general alert dumping ground that no-one then monitors
    default: hmpps-sentence-plan-notifications

  releases-slack-channel:
    type: string
    # Normally dps-releases for most teams / projects
    default: hmpps-sentence-plan-notifications

  node-version:
    type: string
    default: 22.10-browsers

  deploy:
    description: Trigger a manual deployment
    type: string
    default: ""

jobs:
  lint:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          name: Linter check
          command: npm run lint

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  e2e_test:
    machine:
      image: ubuntu-2204:current
      resource_class: medium
    working_directory: ~/app
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Extract saved container image
          command: docker load --input docker_cache/build_image.tar
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - mem/recall:
          env_var: APP_VERSION
      - run:
          name: Stand up a test environment
          command: make test-up
      - run:
          name: Run the end-to-end tests
          command: make e2e-ci
      - run:
          name: Store container logs
          command: make save-logs OUTPUT_LOGS_DIR=~/docker-logs PROJECT_NAME="hmpps-sentence-plan-test"
          when: on_fail
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: integration_tests/screenshots
      - store_artifacts:
          path: ~/docker-logs

workflows:
  version: 2
  build-test-and-deploy:
    when:
      not: << pipeline.parameters.deploy >>
    jobs:
      - lint:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - lint
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context: hmpps-common-vars
      - e2e_test:
          context: hmpps-common-vars
          requires:
            - build_docker
      - hmpps/publish_docker:
          name: publish_docker
          publish_latest_tag: false
          context: hmpps-common-vars
          requires:
            - unit_test
            - e2e_test
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - publish_docker
          helm_timeout: 5m
      - hmpps/publish_docker:
          name: publish_docker_latest
          publish_latest_tag: true
          context: hmpps-common-vars
          requires:
            - unit_test
            - e2e_test
          filters:
            branches:
              only:
                - production
      - request-preprod-approval:
          type: approval
          filters:
            branches:
              only:
                - production
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context:
            - hmpps-common-vars
            - hmpps-sentence-plan-preprod
          filters:
            branches:
              only:
                - production
          requires:
            - request-preprod-approval
            - publish_docker_latest
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          filters:
            branches:
              only:
                - production
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-sentence-plan-prod
          filters:
            branches:
              only:
                - production
          requires:
            - request-prod-approval
            - publish_docker_latest
          helm_timeout: 5m

  deploy-to-test-env:
    when:
      and:
        - equal: [ "test", << pipeline.parameters.deploy >> ]
    jobs:
      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context:
            - hmpps-common-vars
            - hmpps-sentence-plan-test
      - hmpps/publish_docker:
          name: publish_docker
          publish_latest_tag: false
          context: hmpps-common-vars
          requires:
            - build_docker
      - hmpps/deploy_env:
          name: deploy_test
          env: "test"
          jira_update: true
          jira_env_type: testing
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context:
            - hmpps-common-vars
            - hmpps-sentence-plan-test
          requires:
            - publish_docker
          helm_timeout: 5m

  security:
    triggers:
      - schedule:
          cron: "36 9 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_outdated:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          node_tag: << pipeline.parameters.node-version >>
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          node_tag: << pipeline.parameters.node-version >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "20 9 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
